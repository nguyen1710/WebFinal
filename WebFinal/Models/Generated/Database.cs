




















// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `ShopConnection`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `Data Source=(local)\SQLEXPRESS;Initial Catalog=FINALPROJECTSE;User ID=sa;Password=sql2017`
//     Schema:                 ``
//     Include Views:          `False`



using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace ShopConnection
{

	public partial class ShopConnectionDB : Database
	{
		public ShopConnectionDB() 
			: base("ShopConnection")
		{
			CommonConstruct();
		}

		public ShopConnectionDB(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			ShopConnectionDB GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static ShopConnectionDB GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new ShopConnectionDB();
        }

		[ThreadStatic] static ShopConnectionDB _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        

		public class Record<T> where T:new()
		{
			public static ShopConnectionDB repo { get { return ShopConnectionDB.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }

			public void Save() { repo.Save(this); }
			public int Update() { return repo.Update(this); }

			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static bool Exists(string sql, params object[] args) { return repo.Exists<T>(sql, args); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }

		}

	}
	



    

	[TableName("dbo.tb_Chungtu")]




	[ExplicitColumns]

    public partial class tb_Chungtu : ShopConnectionDB.Record<tb_Chungtu>  
    {



		[Column] public string ID { get; set; }





		[Column] public string LoaiCT { get; set; }





		[Column] public string SCT { get; set; }





		[Column] public DateTime? Ngaynhap { get; set; }





		[Column] public string SCT2 { get; set; }





		[Column] public DateTime? Ngayxuat { get; set; }





		[Column] public string MaDV1 { get; set; }





		[Column] public string MaDV2 { get; set; }





		[Column] public string MaCT { get; set; }





		[Column] public string trangthai { get; set; }





		[Column] public string ghichu { get; set; }





		[Column] public int? soluong { get; set; }





		[Column] public int? tongtien { get; set; }



	}

    

	[TableName("dbo.tb_Chungtuchitiet")]




	[ExplicitColumns]

    public partial class tb_Chungtuchitiet : ShopConnectionDB.Record<tb_Chungtuchitiet>  
    {



		[Column] public string IDChitiet { get; set; }





		[Column] public string IDChungtu { get; set; }





		[Column] public string IDSP { get; set; }





		[Column] public int? soluong { get; set; }





		[Column] public int? dongia { get; set; }





		[Column] public string nhacungcap { get; set; }



	}

    

	[TableName("dbo.tb_Congty")]




	[ExplicitColumns]

    public partial class tb_Congty : ShopConnectionDB.Record<tb_Congty>  
    {



		[Column] public string MaCT { get; set; }





		[Column] public string TenCT { get; set; }





		[Column] public string diachi { get; set; }





		[Column] public string dienthoai { get; set; }



	}

    

	[TableName("dbo.tb_Donvi")]



	[PrimaryKey("MADV", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class tb_Donvi : ShopConnectionDB.Record<tb_Donvi>  
    {



		[Column] public string MADV { get; set; }





		[Column] public string tenDV { get; set; }





		[Column] public string diachi { get; set; }





		[Column] public string dienthoai { get; set; }





		[Column] public string email { get; set; }





		[Column] public string maCT { get; set; }





		[Column] public bool? kho { get; set; }





		[Column] public string kyhieu { get; set; }



	}

    

	[TableName("dbo.tb_DVT")]




	[ExplicitColumns]

    public partial class tb_DVT : ShopConnectionDB.Record<tb_DVT>  
    {



		[Column] public string ID { get; set; }





		[Column] public string ten { get; set; }



	}

    

	[TableName("dbo.tb_Giohang")]




	[ExplicitColumns]

    public partial class tb_Giohang : ShopConnectionDB.Record<tb_Giohang>  
    {



		[Column] public int? IDGH { get; set; }





		[Column] public string MaTaiKhoan { get; set; }





		[Column] public string MaSanPham { get; set; }





		[Column] public string TenSanPham { get; set; }





		[Column] public int? Soluong { get; set; }





		[Column] public int? gia { get; set; }





		[Column] public string tongtien { get; set; }



	}

    

	[TableName("dbo.tb_Nhacungcap")]



	[PrimaryKey("MANCC", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class tb_Nhacungcap : ShopConnectionDB.Record<tb_Nhacungcap>  
    {



		[Column] public string MANCC { get; set; }





		[Column] public string TENNCC { get; set; }





		[Column] public string diachi { get; set; }





		[Column] public string dienthoai { get; set; }





		[Column] public string email { get; set; }



	}

    

	[TableName("dbo.tb_ProductPage")]




	[ExplicitColumns]

    public partial class tb_ProductPage : ShopConnectionDB.Record<tb_ProductPage>  
    {



		[Column] public string ProductID { get; set; }





		[Column] public string ProductName { get; set; }





		[Column] public int? price { get; set; }





		[Column] public int? discount { get; set; }





		[Column] public string xuatxu { get; set; }





		[Column] public string thumb { get; set; }



	}

    

	[TableName("dbo.tb_Sanpham")]




	[ExplicitColumns]

    public partial class tb_Sanpham : ShopConnectionDB.Record<tb_Sanpham>  
    {



		[Column] public string MaSP { get; set; }





		[Column] public string TenSP { get; set; }





		[Column] public int? donvitinh { get; set; }





		[Column] public int? dongia { get; set; }





		[Column] public string nhacungcap { get; set; }





		[Column] public string xuatxu { get; set; }





		[Column] public string thumb { get; set; }



	}

    

	[TableName("dbo.tb_Xuatxu")]




	[ExplicitColumns]

    public partial class tb_Xuatxu : ShopConnectionDB.Record<tb_Xuatxu>  
    {



		[Column] public string MaXX { get; set; }





		[Column] public string Ten { get; set; }



	}


}
